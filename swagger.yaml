openapi: 3.0.0
info:
  title: Hotel Booking API
  version: 1.0.0
  description: API documentation for a hotel booking system.

servers:
  - url: http://localhost:5000/api/v1

paths:
  /auth/create-user:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User registered successfully

  /auth/login:
    post:
      summary: Login a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful

  /auth/login/admin:
    post:
      summary: Admin login
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Admin login successful

  /hotels/create-hotels:
    post:
      summary: Create a new hotel
      tags: [Hotels]
      responses:
        '201':
          description: Hotel created

  /hotels:
    get:
      summary: Get all hotels
      tags: [Hotels]
      responses:
        '200':
          description: A list of hotels

  /hotels/{hotelId}:
    get:
      summary: Get a specific hotel
      tags: [Hotels]
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel data

  /hotels/update-hotels/{hotelId}:
    put:
      summary: Update a hotel (Admin only)
      tags: [Hotels]
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel updated

  /hotels/delete-hotel/{hotelId}:
    delete:
      summary: Delete a hotel (Admin only)
      tags: [Hotels]
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Hotel deleted

  /hotels/room/{hotelId}:
    get:
      summary: Get all rooms for a hotel
      tags: [Hotels]
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rooms retrieved

  /rooms/create-room/{hotelId}:
    post:
      summary: Create a room in a hotel (Admin only)
      tags: [Rooms]
      parameters:
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Room created

  /rooms:
    get:
      summary: Get all rooms
      tags: [Rooms]
      responses:
        '200':
          description: Rooms retrieved

  /rooms/{roomId}:
    get:
      summary: Get a specific room
      tags: [Rooms]
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room retrieved

  /rooms/update-room/{roomId}:
    put:
      summary: Update a room (Admin only)
      tags: [Rooms]
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room updated

  /rooms/delete-room/{roomId}/{hotelId}:
    delete:
      summary: Delete a room (Admin only)
      tags: [Rooms]
      parameters:
        - in: path
          name: roomId
          required: true
          schema:
            type: string
        - in: path
          name: hotelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room deleted

  /rooms/availability/{roomNumberId}:
    put:
      summary: Update room availability
      tags: [Rooms]
      parameters:
        - in: path
          name: roomNumberId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Room availability updated

  /users/user/:
    get:
      summary: Get all users (Admin only)
      tags: [Users]
      responses:
        '200':
          description: Users retrieved

  /users/user/{userId}:
    get:
      summary: Get a specific user
      tags: [Users]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved

  /users/user/update-user/{userId}:
    put:
      summary: Update a user (Authenticated)
      tags: [Users]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User updated

  /users/user/delete-user/{userId}:
    delete:
      summary: Delete a user (Admin only)
      tags: [Users]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
